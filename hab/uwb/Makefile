# Makefile.in generated by automake 1.11.1 from Makefile.am.
# hab/uwb/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Copyright (c) 2008-2010, Regents of the University of Colorado.
# This work was supported by NASA contracts NNJ05HE10G, NNC06CB40C, and
# NNC07CB47C.

# Copyright (c) 2008-2010, Regents of the University of Colorado.
# This work was supported by NASA contracts NNJ05HE10G, NNC06CB40C, and
# NNC07CB47C.


pkgdatadir = $(datadir)/bionet
pkgincludedir = $(includedir)/bionet
pkglibdir = $(libdir)/bionet
pkglibexecdir = $(libexecdir)/bionet
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-apple-darwin10.8.0
host_triplet = x86_64-apple-darwin10.8.0
target_triplet = x86_64-apple-darwin10.8.0
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/common.am COPYING
#am__append_1 = -O0 -fprofile-arcs -ftest-coverage
#am__append_2 = -fprofile-arcs -ftest-coverage -lgcov
#am__append_3 = -pg
#am__append_4 = -pg
am__append_5 = -DMACOSX
#am__append_6 = -DLINUX 
bin_PROGRAMS = uwb-hab$(EXEEXT)
subdir = hab/uwb
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/build-aux/m4/ac_pkg_swig.m4 \
	$(top_srcdir)/build-aux/m4/ac_python_devel.m4 \
	$(top_srcdir)/build-aux/m4/autotroll.m4 \
	$(top_srcdir)/build-aux/m4/ax_ext_check_header.m4 \
	$(top_srcdir)/build-aux/m4/ax_ext_have_lib.m4 \
	$(top_srcdir)/build-aux/m4/libtool.m4 \
	$(top_srcdir)/build-aux/m4/ltoptions.m4 \
	$(top_srcdir)/build-aux/m4/ltsugar.m4 \
	$(top_srcdir)/build-aux/m4/ltversion.m4 \
	$(top_srcdir)/build-aux/m4/lt~obsolete.m4 \
	$(top_srcdir)/build-aux/m4/qwt.m4 \
	$(top_srcdir)/build-aux/m4/swig_python.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_uwb_hab_OBJECTS = uwb_hab-main.$(OBJEXT) uwb_hab-global.$(OBJEXT) \
	uwb_hab-node-remove.$(OBJEXT) uwb_hab-uwb-connect.$(OBJEXT) \
	uwb_hab-uwb-read.$(OBJEXT)
uwb_hab_OBJECTS = $(am_uwb_hab_OBJECTS)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(top_srcdir)/libhab/libhab.la \
	$(am__DEPENDENCIES_1)
am__DEPENDENCIES_3 = $(top_srcdir)/util/libbionet-util.la \
	$(am__DEPENDENCIES_1)
am__DEPENDENCIES_4 = $(top_srcdir)/asn.1/libbionet-asn.la \
	$(am__DEPENDENCIES_1)
am__DEPENDENCIES_5 = $(top_srcdir)/cal/mdnssd-bip/server/libcal-mdnssd-bip-server.la \
	$(am__DEPENDENCIES_1)
uwb_hab_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(uwb_hab_CFLAGS) $(CFLAGS) \
	$(uwb_hab_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(uwb_hab_SOURCES)
DIST_SOURCES = $(uwb_hab_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/lenny/src/bionet2.git/build-aux/missing --run aclocal-1.11
ALSA_CFLAGS = 
ALSA_LIBS = 
AMTAR = ${SHELL} /Users/lenny/src/bionet2.git/build-aux/missing --run tar
AR = ar
AS = as
AUTOCONF = ${SHELL} /Users/lenny/src/bionet2.git/build-aux/missing --run autoconf
AUTOHEADER = ${SHELL} /Users/lenny/src/bionet2.git/build-aux/missing --run autoheader
AUTOMAKE = ${SHELL} /Users/lenny/src/bionet2.git/build-aux/missing --run automake-1.11
AVAHI_COMPAT_LIBDNS_SD_CFLAGS = 
AVAHI_COMPAT_LIBDNS_SD_LIBS = 
AWK = awk
BAZAAR = /usr/local/bin/bzr
BIONET_BUILD_TAG = ++lenny
BLUEZ_CFLAGS = 
BLUEZ_LIBS = 
CC = ccache clang
CCACHE = /opt/local/bin/ccache
CCDEPMODE = depmode=gcc3
CFLAGS = 
CFLAGS_QWT = 
CHECK_CFLAGS = -I/opt/local/include  
CHECK_LIBS = -L/opt/local/lib -lcheck  
CPP = clang -E
CPPFLAGS = 
CXX = ccache g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
DOT = /opt/local/bin/dot
DOXYGEN = /opt/local/bin/doxygen
DSYMUTIL = dsymutil
DUMPBIN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
ENABLE_ION = 
EXEEXT = 
FGREP = /usr/bin/grep -F
GLIB_CFLAGS = -D_REENTRANT -I/opt/local/include/glib-2.0 -I/opt/local/lib/glib-2.0/include -I/opt/local/include  
GLIB_GENMARSHAL = glib-genmarshal
GLIB_LIBS = -L/opt/local/lib -lgthread-2.0 -lglib-2.0 -lintl  
GLIB_MKENUMS = glib-mkenums
GOBJECT_QUERY = gobject-query
GREP = /usr/bin/grep
GWT_PATH = 
INCLUDE_DIRS_QWT = 
INSTALL = /opt/local/bin/ginstall -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
JAVA = /usr/bin/java
LD = /usr/llvm-gcc-4.2/libexec/gcc/i686-apple-darwin10/4.2.1/ld
LDFLAGS = 
LEX = flex
LEXLIB = -lfl
LEX_OUTPUT_ROOT = lex.yy
LIBOBJS = 
LIBS = 
LIBS_ION = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = lipo
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /Users/lenny/src/bionet2.git/build-aux/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /opt/local/bin/gmkdir -p
MOC = 
NM = /usr/bin/nm
NMEDIT = nmedit
OBJDUMP = objdump
OBJEXT = o
OPENSSL_CFLAGS = -I/opt/local/include  
OPENSSL_LIBS = -L/opt/local/lib -lssl -lcrypto -lz  
OTOOL = otool
OTOOL64 = :
PACKAGE = bionet
PACKAGE_BUGREPORT = bionet@bioserve.colorado.edu
PACKAGE_NAME = Bionet
PACKAGE_STRING = Bionet 2.6
PACKAGE_TARNAME = bionet
PACKAGE_URL = 
PACKAGE_VERSION = 2.6
PATH_SEPARATOR = :
PKG_CONFIG = /opt/local/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PYTHON = /opt/local/bin/python
PYTHON_CPPFLAGS = -I/opt/local/Library/Frameworks/Python.framework/Versions/2.6/include/python2.6
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_EXTRA_LDFLAGS = -u _PyMac_Error  /opt/local/Library/Frameworks/Python.framework/Versions/2.6/Python
PYTHON_EXTRA_LIBS =  -ldl  -framework CoreFoundation
PYTHON_LDFLAGS = -L/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6 -lpython2.6
PYTHON_PLATFORM = darwin
PYTHON_PREFIX = ${prefix}
PYTHON_SITE_PKG = /opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages
PYTHON_VERSION = 2.6
QMAKE = 
QT_CFLAGS = 
QT_CPPFLAGS = 
QT_CXXFLAGS = 
QT_DEFINES = 
QT_INCPATH = 
QT_LDFLAGS = 
QT_LFLAGS = 
QT_LIBS = 
QT_PATH = 
QT_VERSION_MAJOR = 
QWT_LDFLAGS = 
QWT_LIBADD = 
RANLIB = ranlib
RCC = 
REBUILD_ASN = 
SED = /opt/local/bin/gsed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
SWIG = /opt/local/bin/swig
SWIG_LIB = 
SWIG_PYTHON_CPPFLAGS = -I/opt/local/Library/Frameworks/Python.framework/Versions/2.6/include/python2.6
SWIG_PYTHON_OPT = -python
SYSAPI = posix
UIC = 
VERSION = 2.6
XSLTPROC = /opt/local/bin/xsltproc
YACC = bison -y
YFLAGS = 
_WIN32_WINNT = 
abs_builddir = /Users/lenny/src/bionet2.git/hab/uwb
abs_srcdir = /Users/lenny/src/bionet2.git/hab/uwb
abs_top_builddir = /Users/lenny/src/bionet2.git
abs_top_srcdir = /Users/lenny/src/bionet2.git
ac_ct_AR = ar
ac_ct_CC = clang
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-apple-darwin10.8.0
build_alias = 
build_cpu = x86_64
build_os = darwin10.8.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-apple-darwin10.8.0
host_alias = 
host_cpu = x86_64
host_os = darwin10.8.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/lenny/src/bionet2.git/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /opt/local/bin/gmkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = ${pyexecdir}/bionet
pkgpythondir = ${pythondir}/bionet
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib/python2.6/site-packages
pythondir = ${prefix}/lib/python2.6/site-packages
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = x86_64-apple-darwin10.8.0
target_alias = 
target_cpu = x86_64
target_os = darwin10.8.0
target_vendor = apple
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..

#
# Set The SDL Version.
#
# For detailed explanation of this versioning scheme, 
# See: http://sourceware.org/autobook/autobook/autobook_91.html#SEC91
#
# INTERFACE:REVISION:AGE
#
# Interface is bumped on API breaking events
# Revision is bumped on each change like a bug fix
# Age is bumped on every addition to the API
BIONET_INTERFACE_VERSION = 4:0:0

#Purely aesthetic marketing version number
BIONET_RELEASE_VERSION = 2.6.1

#
# Should be a check for specific gcc versions
#
AM_CFLAGS = -Wall -Werror -g \
	-DBIONET_VERSION=\"$(BIONET_RELEASE_VERSION)\" $(am__append_1) \
	$(am__append_3) $(am__append_5) $(am__append_6)
AM_LDFLAGS = -no-undefined -lm $(am__append_2) $(am__append_4)
INCLUDES_BIONET_UTIL = $(top_srcdir)/util/bionet-util.h $(top_srcdir)/util/bionet-hab.h $(top_srcdir)/util/bionet-node.h $(top_srcdir)/util/bionet-resource.h $(top_srcdir)/util/bionet-stream.h $(top_srcdir)/util/bionet-datapoint.h $(top_srcdir)/util/bionet-value.h $(top_srcdir)/util/bionet-epsilon.h $(top_srcdir)/util/bionet-version.h
CFLAGS_BIONET_UTIL = -I$(top_srcdir)/util $(OPENSSL_CFLAGS)
LDFLAGS_BIONET_UTIL = -L$(top_srcdir)/util 
LIBS_BIONET_UTIL = $(top_srcdir)/util/libbionet-util.la $(OPENSSL_LIBS)
INCLUDES_BIONET_CLIENT = $(top_srcdir)/libbionet/bionet.h
CFLAGS_BIONET_CLIENT = -I$(top_srcdir)/libbionet $(OPENSSL_CFLAGS) $(AVAHI_COMPAT_LIBDNS_SD_CFLAGS)
LDFLAGS_BIONET_CLIENT = -L$(top_srcdir)/libbionet
LIBS_BIONET_CLIENT = $(top_srcdir)/libbionet/libbionet.la $(OPENSSL_LIBS) $(AVAHI_COMPAT_LIBDNS_SD_LIBS)
INCLUDES_BIONET_CLIENT_QT4 = $(top_srcdir)/client/libbionet-qt4/bionetio.h $(top_srcdir)/client/libbionet-qt4/bionetmodel.h
CFLAGS_BIONET_CLIENT_QT4 = -I$(top_srcdir)/client/libbionet-qt4
LDFLAGS_BIONET_CLIENT_QT4 = -L$(top_srcdir)/client/libbionet-qt4
LIBS_BIONET_CLIENT_QT4 = $(top_srcdir)/client/libbionet-qt4/libbionet-qt4.la
INCLUDES_BIONET_CAL_UTIL = $(top_srcdir)/cal/cal-event.h $(top_srcdir)/cal/cal-util.h
CFLAGS_BIONET_CAL_UTIL = -I$(top_srcdir)/cal/util $(OPENSSL_CFLAGS)
LDFLAGS_BIONET_CAL_UTIL = -L$(top_srcdir)/cal/util 
LIBS_BIONET_CAL_UTIL = $(top_srcdir)/cal/util/libevent.la $(OPENSSL_LIBS)
INCLUDES_BIONET_CAL_SERVER = $(top_srcdir)/cal/cal-server.h 
CFLAGS_BIONET_CAL_SERVER = -I$(top_srcdir)/cal $(OPENSSL_CFLAGS)
LDFLAGS_BIONET_CAL_SERVER = -L$(top_srcdir)/cal
LIBS_BIONET_CAL_SERVER = $(top_srcdir)/cal/mdnssd-bip/server/libcal-mdnssd-bip-server.la $(OPENSSL_LIBS)
INCLUDES_BIONET_CAL_CLIENT = $(top_srcdir)/cal/cal-client.h
CFLAGS_BIONET_CAL_CLIENT = -I$(top_srcdir)/cal -I$(top_srcdir)/cal/mdnssd-bip/shared $(OPENSSL_CFLAGS)
LDFLAGS_BIONET_CAL_CLIENT = -L$(top_srcdir)/cal
LIBS_BIONET_CAL_CLIENT = $(top_srcdir)/cal/mdnssd-bip/client/libcal-mdnssd-bip-client.la $(OPENSSL_LIBS)
LIBS_CAL_MDNSSD_BIP_SHARED = $(top_srcdir)/cal/mdnssd-bip/shared/libcal-mdnssd-bip-shared.la
LIBS_CAL_UTIL = $(top_srcdir)/cal/util/libevent.la
INCLUDES_BIONET_HAB = $(top_srcdir)/libhab/hardware-abstractor.h
CFLAGS_BIONET_HAB = -I$(top_srcdir)/libhab $(AVAHI_COMPAT_LIBDNS_SD_CFLAGS)
LDFLAGS_BIONET_HAB = -L$(top_srcdir)/libhab
LIBS_BIONET_HAB = $(top_srcdir)/libhab/libhab.la $(AVAHI_COMPAT_LIBDNS_SD_LIBS)
INCLUDES_BIONET_HAB_AME = $(top_srcdir)/hab/libamedevice/amedevice.h
CFLAGS_BIONET_HAB_AME = -I$(top_srcdir)/hab/libamedevice
LDFLAGS_BIONET_HAB_AME = -L$(top_srcdir)/hab/libamedevice
LIBS_BIONET_HAB_AME = $(top_srcdir)/hab/libamedevice/libamedevice.la
INCLUDES_BIONET_ASN1 = $(top_srcdir)/asn.1/bionet-asn.h
CFLAGS_BIONET_ASN1 = -I$(top_srcdir)/asn.1 $(OPENSSL_CFLAGS)
LDFLAGS_BIONET_ASN1 = -L$(top_srcdir)/asn.1
LIBS_BIONET_ASN1 = $(top_srcdir)/asn.1/libbionet-asn.la $(OPENSSL_LIBS)
INCLUDES_BDM = $(top_srcdir)/libbdm/bdm-client.h
CFLAGS_BDM = -I$(top_srcdir)/libbdm $(GLIB_CFLAGS) $(CFLAGS_BIONET_UTIL) $(CFLAGS_BIONET_ASN1)
LDFLAGS_BDM = -L$(top_srcdir)/libbdm $(GLIB_LIBS) $(AVAHI_COMPAT_LIBDNS_SD_LIBS) $(DBUS_LIBS) $(LDFLAGS_BIONET_UTIL) $(LDFLAGS_BIONET_ASN1)
LIBS_BDM = $(top_srcdir)/libbdm/libbdm.la
INCLUDES_BP_COMMANDING = $(top_srcdir)/libbdm/bp-commanding.h
CFLAGS_BP_COMMANDING = -I$(top_srcdir)/libbdm $(GLIB_CFLAGS) $(CFLAGS_BIONET_UTIL) $(CFLAGS_BIONET_ASN1)
LDFLAGS_BP_COMMANDING = -L$(top_srcdir)/libbdm $(GLIB_LIBS) $(AVAHI_COMPAT_LIBDNS_SD_LIBS) $(DBUS_LIBS) $(LDFLAGS_BIONET_UTIL) $(LDFLAGS_BIONET_ASN1)
LIBS_BP_COMMANDING = $(top_srcdir)/libbdm/libbp-commanding.la
INCLUDES_QT = `pkg-config --cflags QtCore` `pkg-config --cflags QtGui`
LDFLAGS_QT = `pkg-config --libs QtCore` `pkg-config --libs QtGui`
INCLUDES_SWIG_BIONET_UTIL = $(top_srcdir)/util/bionet-hab.i $(top_srcdir)/util/bionet-node.i $(top_srcdir)/util/bionet-resource.i $(top_srcdir)/util/bionet-util.i $(top_srcdir)/util/bionet-datapoint.i $(top_srcdir)/util/bionet-value.i $(top_srcdir)/util/bionet-stream.i $(top_srcdir)/util/bionet-epsilon.i $(top_srcdir)/util/bionet-bdm.i $(top_srcdir)/util/bionet-wrappers.i $(top_srcdir)/util/bionet-event.i $(top_srcdir)/util/bionet-swig-types.h $(top_srcdir)/util/value-operators.i
#CFLAGS_LIBBPS = -pthread
#LDFLAGS_LIBBPS = -pthread
#LIBS_LIBBPS = $(top_srcdir)/bps/libbps.la
bionetdatadir = $(datadir)/bionet2
uwb_hab_SOURCES = \
    main.c                          \
    global.c                        \
    node-remove.c                   \
    uwb-connect.c                   \
    uwb-read.c

uwb_hab_CFLAGS = $(AM_CFLAGS) $(GLIB_CFLAGS) $(CFLAGS_BIONET_HAB) $(CFLAGS_BIONET_UTIL) 
uwb_hab_LDFLAGS = $(AM_LDFLAGS) $(GLIB_LIBS) $(AVAHI_COMPAT_LIBDNS_SD_LIBS) $(DBUS_LIBS) $(LDFLAGS_BIONET_ASN1) $(LDFLAGS_BIONET_CAL_SERVER) 
uwb_hab_LDADD = $(AM_LDADD) -lpthread -lm $(LIBS_BIONET_HAB) $(LIBS_BIONET_UTIL) $(LIBS_BIONET_ASN1) $(LIBS_BIONET_CAL_SERVER)
uwb_hab_DEPENDENCIES = $(INCLUDES_BIONET_HAB) $(INCLUDES_BIONET_UTIL) 
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/common.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign hab/uwb/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign hab/uwb/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
uwb-hab$(EXEEXT): $(uwb_hab_OBJECTS) $(uwb_hab_DEPENDENCIES) 
	@rm -f uwb-hab$(EXEEXT)
	$(uwb_hab_LINK) $(uwb_hab_OBJECTS) $(uwb_hab_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/uwb_hab-global.Po
include ./$(DEPDIR)/uwb_hab-main.Po
include ./$(DEPDIR)/uwb_hab-node-remove.Po
include ./$(DEPDIR)/uwb_hab-uwb-connect.Po
include ./$(DEPDIR)/uwb_hab-uwb-read.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

uwb_hab-main.o: main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(uwb_hab_CFLAGS) $(CFLAGS) -MT uwb_hab-main.o -MD -MP -MF $(DEPDIR)/uwb_hab-main.Tpo -c -o uwb_hab-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c
	$(am__mv) $(DEPDIR)/uwb_hab-main.Tpo $(DEPDIR)/uwb_hab-main.Po
#	source='main.c' object='uwb_hab-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(uwb_hab_CFLAGS) $(CFLAGS) -c -o uwb_hab-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c

uwb_hab-main.obj: main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(uwb_hab_CFLAGS) $(CFLAGS) -MT uwb_hab-main.obj -MD -MP -MF $(DEPDIR)/uwb_hab-main.Tpo -c -o uwb_hab-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`
	$(am__mv) $(DEPDIR)/uwb_hab-main.Tpo $(DEPDIR)/uwb_hab-main.Po
#	source='main.c' object='uwb_hab-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(uwb_hab_CFLAGS) $(CFLAGS) -c -o uwb_hab-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`

uwb_hab-global.o: global.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(uwb_hab_CFLAGS) $(CFLAGS) -MT uwb_hab-global.o -MD -MP -MF $(DEPDIR)/uwb_hab-global.Tpo -c -o uwb_hab-global.o `test -f 'global.c' || echo '$(srcdir)/'`global.c
	$(am__mv) $(DEPDIR)/uwb_hab-global.Tpo $(DEPDIR)/uwb_hab-global.Po
#	source='global.c' object='uwb_hab-global.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(uwb_hab_CFLAGS) $(CFLAGS) -c -o uwb_hab-global.o `test -f 'global.c' || echo '$(srcdir)/'`global.c

uwb_hab-global.obj: global.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(uwb_hab_CFLAGS) $(CFLAGS) -MT uwb_hab-global.obj -MD -MP -MF $(DEPDIR)/uwb_hab-global.Tpo -c -o uwb_hab-global.obj `if test -f 'global.c'; then $(CYGPATH_W) 'global.c'; else $(CYGPATH_W) '$(srcdir)/global.c'; fi`
	$(am__mv) $(DEPDIR)/uwb_hab-global.Tpo $(DEPDIR)/uwb_hab-global.Po
#	source='global.c' object='uwb_hab-global.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(uwb_hab_CFLAGS) $(CFLAGS) -c -o uwb_hab-global.obj `if test -f 'global.c'; then $(CYGPATH_W) 'global.c'; else $(CYGPATH_W) '$(srcdir)/global.c'; fi`

uwb_hab-node-remove.o: node-remove.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(uwb_hab_CFLAGS) $(CFLAGS) -MT uwb_hab-node-remove.o -MD -MP -MF $(DEPDIR)/uwb_hab-node-remove.Tpo -c -o uwb_hab-node-remove.o `test -f 'node-remove.c' || echo '$(srcdir)/'`node-remove.c
	$(am__mv) $(DEPDIR)/uwb_hab-node-remove.Tpo $(DEPDIR)/uwb_hab-node-remove.Po
#	source='node-remove.c' object='uwb_hab-node-remove.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(uwb_hab_CFLAGS) $(CFLAGS) -c -o uwb_hab-node-remove.o `test -f 'node-remove.c' || echo '$(srcdir)/'`node-remove.c

uwb_hab-node-remove.obj: node-remove.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(uwb_hab_CFLAGS) $(CFLAGS) -MT uwb_hab-node-remove.obj -MD -MP -MF $(DEPDIR)/uwb_hab-node-remove.Tpo -c -o uwb_hab-node-remove.obj `if test -f 'node-remove.c'; then $(CYGPATH_W) 'node-remove.c'; else $(CYGPATH_W) '$(srcdir)/node-remove.c'; fi`
	$(am__mv) $(DEPDIR)/uwb_hab-node-remove.Tpo $(DEPDIR)/uwb_hab-node-remove.Po
#	source='node-remove.c' object='uwb_hab-node-remove.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(uwb_hab_CFLAGS) $(CFLAGS) -c -o uwb_hab-node-remove.obj `if test -f 'node-remove.c'; then $(CYGPATH_W) 'node-remove.c'; else $(CYGPATH_W) '$(srcdir)/node-remove.c'; fi`

uwb_hab-uwb-connect.o: uwb-connect.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(uwb_hab_CFLAGS) $(CFLAGS) -MT uwb_hab-uwb-connect.o -MD -MP -MF $(DEPDIR)/uwb_hab-uwb-connect.Tpo -c -o uwb_hab-uwb-connect.o `test -f 'uwb-connect.c' || echo '$(srcdir)/'`uwb-connect.c
	$(am__mv) $(DEPDIR)/uwb_hab-uwb-connect.Tpo $(DEPDIR)/uwb_hab-uwb-connect.Po
#	source='uwb-connect.c' object='uwb_hab-uwb-connect.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(uwb_hab_CFLAGS) $(CFLAGS) -c -o uwb_hab-uwb-connect.o `test -f 'uwb-connect.c' || echo '$(srcdir)/'`uwb-connect.c

uwb_hab-uwb-connect.obj: uwb-connect.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(uwb_hab_CFLAGS) $(CFLAGS) -MT uwb_hab-uwb-connect.obj -MD -MP -MF $(DEPDIR)/uwb_hab-uwb-connect.Tpo -c -o uwb_hab-uwb-connect.obj `if test -f 'uwb-connect.c'; then $(CYGPATH_W) 'uwb-connect.c'; else $(CYGPATH_W) '$(srcdir)/uwb-connect.c'; fi`
	$(am__mv) $(DEPDIR)/uwb_hab-uwb-connect.Tpo $(DEPDIR)/uwb_hab-uwb-connect.Po
#	source='uwb-connect.c' object='uwb_hab-uwb-connect.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(uwb_hab_CFLAGS) $(CFLAGS) -c -o uwb_hab-uwb-connect.obj `if test -f 'uwb-connect.c'; then $(CYGPATH_W) 'uwb-connect.c'; else $(CYGPATH_W) '$(srcdir)/uwb-connect.c'; fi`

uwb_hab-uwb-read.o: uwb-read.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(uwb_hab_CFLAGS) $(CFLAGS) -MT uwb_hab-uwb-read.o -MD -MP -MF $(DEPDIR)/uwb_hab-uwb-read.Tpo -c -o uwb_hab-uwb-read.o `test -f 'uwb-read.c' || echo '$(srcdir)/'`uwb-read.c
	$(am__mv) $(DEPDIR)/uwb_hab-uwb-read.Tpo $(DEPDIR)/uwb_hab-uwb-read.Po
#	source='uwb-read.c' object='uwb_hab-uwb-read.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(uwb_hab_CFLAGS) $(CFLAGS) -c -o uwb_hab-uwb-read.o `test -f 'uwb-read.c' || echo '$(srcdir)/'`uwb-read.c

uwb_hab-uwb-read.obj: uwb-read.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(uwb_hab_CFLAGS) $(CFLAGS) -MT uwb_hab-uwb-read.obj -MD -MP -MF $(DEPDIR)/uwb_hab-uwb-read.Tpo -c -o uwb_hab-uwb-read.obj `if test -f 'uwb-read.c'; then $(CYGPATH_W) 'uwb-read.c'; else $(CYGPATH_W) '$(srcdir)/uwb-read.c'; fi`
	$(am__mv) $(DEPDIR)/uwb_hab-uwb-read.Tpo $(DEPDIR)/uwb_hab-uwb-read.Po
#	source='uwb-read.c' object='uwb_hab-uwb-read.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(uwb_hab_CFLAGS) $(CFLAGS) -c -o uwb_hab-uwb-read.obj `if test -f 'uwb-read.c'; then $(CYGPATH_W) 'uwb-read.c'; else $(CYGPATH_W) '$(srcdir)/uwb-read.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
