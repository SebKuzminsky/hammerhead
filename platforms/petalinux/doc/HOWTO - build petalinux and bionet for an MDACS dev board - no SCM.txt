##############################################################################################################
#
# 	This file describes how to build a petalinux distribution and bionet applications for an
#	IDAA MDACS development board.
#
#       - instructions assume a working hardware platform from which the configuration has
#         already been preserved.
#
##############################################################################################################

1. Configure and build kernel images

    a. Obtain the petalinux distribution archive from Petalogix website (e.g. petalinux-v0.30-rc1.tar.gz). 
       and extract into an appropriate directory:

        $ mkdir {petalinux_working_dir}
        $ cd {petalinux_working_dir}
        $ tar xzf {petalinux_tar_file_path}/petalinux-v0.30-rc1.tar.gz

    b. From your petalinux working directory run the following command to set up the
       petalinux environment for your shell:

        $ cd {petalinux_working_dir}
        $ source ./settings.sh

    c. Obtain the configurations files for the appropriate MDACS development platform from Invocon (e.g. MDACS_Xilinx_X3S500E.tgz)
       extract into an appropriate directory.

        $ cd {platform_working_dir}
        $ tar xzf {plarform_tar_file_path}/MDACS_Xilinx_X3S500E.tgz

    d. Copy the main main kernel configuration file from the platform working directory to the petalinux working directory. 

        $ cp {platform_working_dir}/petalinux-v0.30-rc1/software/petalinux-dist/.config $PETALINUX/software/petalinux-dist/

    e. run make menuconfig and save the kernel platform configuration.

        $ cd $PETALINUX/software/petalinux-dist/		 
        $ make menuconfig

            select "Load an Alternate Configuration File" and choose .config

            exit menuconfig selecting <yes> to save kernel configuration

    f. Copy the remaining petalinux configuration files from the platform working directory to the petalinux working directory.

        cp {platform_working_dir}/petalinux-v0.30-rc1/software/petalinux-dist/config/.config $PETALINUX/software/petalinux-dist/config/
        cp {platform_working_dir}/petalinux-v0.30-rc1/software/petalinux-dist/linux-2.6.x/.config $PETALINUX/software/petalinux-dist/linux-2.6.x/
        cp {platform_working_dir}/petalinux-v0.30-rc1/software/petalinux-dist/uClibc/.config $PETALINUX/software/petalinux-dist/uClibc/
        cp {platform_working_dir}/petalinux-v0.30-rc1/software/petalinux-dist/linux-2.6.x/arch/microblaze/platform/Xilinx-Spartan3E500-RevD/Kconfig.auto $PETALINUX/software/petalinux-dist/linux-2.6.x/arch/microblaze/platform/Xilinx-Spartan3E500-RevD/

    g. run make menuconfig and save the vendor platform configuration.

        $ cd $PETALINUX/software/petalinux-dist/		 
        $ make menuconfig

            select "Kernel/Library/Defaults Selection  --->"
            select "[*] Customize Vendor/User Settings"	
            exit selecting <yes> to save kernel configuration

            select "Load an Alternate Configuration File" and choose .config
            exit selecting <yes> to save kernel configuration

    h. build kernel images

        $ cd $PETALINUX/software/petalinux-dist/		 
        $ make clean all	   (this will take a while)

2. Configure and build glib for the target

    a. Obtain the glib archive from the appropriate source (e.g. glib-2.15.6.tar.gz). 
       and extract into your petalinux tree with the following commands:

        $ cd $PETALINUX/software/user-apps
        $ tar xzf {glib_tar_file_path}/glib-2.15.6.tar.gz

    b. Add ucfront to path

        $ export PATH=$PETALINUX/software/petalinux-dist/tools/ucfront:$PATH

    c. Set up mb.cache file for glib cross compilation

        $ cd $PETALINUX/software/user-apps/glib-2.15.6
        $ { echo glib_cv_stack_grows=no; echo ac_cv_func_posix_getpwuid_r=yes; echo ac_cv_func_posix_getgrgid_r=yes; } > mb.cache
        $ chmod a-w mb.cache

    d. Create install directory for glib

        $ mkdir $PETALINUX/software/petalinux-dist/glib

    e. Configure glib

        $ cd $PETALINUX/software/user-apps/glib-2.15.6
        $ ./configure -C --cache-file=mb.cache --enable-static --disable-shared --disable-xattr --disable-selinux --prefix=$PETALINUX/software/petalinux-dist/glib --build=i386 --host=none-uclinux-uclibc CC='ucfront microblaze-uclinux-gcc' LDFLAGS='-Wl, -elf2flt'

    f. Build and install glib

        $ make install

3. Build bionet apps for target

    a. Obtain the bionet archive from the appropriate source (e.g. bionet-0.5.5.tar.tar). 
       and extract into your petalinux tree with the following commands:

        $ cd $PETALINUX/software/user-apps 
        $ tar xzf {scm_workspace}/bionet-0.5.5.tar.tar

    b. Obtain the bionet make file mods from Invocon (e.g. bionet-0.5.5-mods.tgz)
       and extract into an appropriate directory.

        $ cd {bionet_working_dir}
        $ tar xzf {bionet_mods_tar_file_path}/bionet-0.5.5-mods.tgz

    c. Copy all make files from the bionet working directory to the petalinux working directory.

        $ cp {bionet_working_dir}/bionet-0.5.5/makefile.params $PETALINUX/software/user-apps/bionet-0.5.5/
        $ cp {bionet_working_dir}/bionet-0.5.5/client/Makefile $PETALINUX/software/user-apps/bionet-0.5.5/client/
        $ cp {bionet_working_dir}/bionet-0.5.5/client/libbionet/Makefile $PETALINUX/software/user-apps/bionet-0.5.5/client/libbionet/
        $ cp {bionet_working_dir}/bionet-0.5.5/hab/Makefile $PETALINUX/software/user-apps/bionet-0.5.5/hab/
        $ cp {bionet_working_dir}/bionet-0.5.5/hab/simple-fake-example/Makefile $PETALINUX/software/user-apps/bionet-0.5.5/hab/simple-fake-example/

    d. Build bionet applications

        $ cd $PETALINUX/software/user-apps/bionet-0.5.5
        $ make clean all
