#!/bin/bash
#
# Copyright (c) 2008-2010, Regents of the University of Colorado.
# This work was supported by NASA contracts NNJ05HE10G, NNC06CB40C, and
# NNC07CB47C.
#


export ROOT="$(pwd)/.."

NUM_SKIPPED=0
NUM_PASSED=0
NUM_FAILED=0
NUM_WARN=0
NUM_TOTAL=0
declare -a TEST_REPORT

TESTS=$@

. $ROOT/test/config.sh

ulimit -Sc unlimited

if [ -z "$TESTS" ]; then
    TESTS=$(ls -1d tests/* | sort)
fi

for TEST in $TESTS; do
    [ ! -d "$TEST" ] && continue

    echo
    echo "*** ${TEST}"
    echo -n "*** " && date

    if [ ! -x "$TEST/run" ]; then
        echo "disabled, skipping"
        NUM_SKIPPED=$(($NUM_SKIPPED+1))
        continue
    fi

    NUM_TOTAL=$(($NUM_TOTAL+1))

    pushd "$TEST" > /dev/null
    ./run
    RC=$?
    if [ $RC -eq $TEST_SUCCEED_CODE ]; then
        echo "TEST PASSED!"
        NUM_PASSED=$(($NUM_PASSED+1))
    else
        if [ $RC -eq $TEST_SKIP_CODE ]; then
            echo "test disabled itself, skipping"
            NUM_SKIPPED=$(($NUM_SKIPPED+1))
	    TEST_REPORT=( "${TEST_REPORT[@]}" "${TEST}:skip: Command returned skip code" )
        elif [ $RC -eq $TEST_WARNING_CODE ]; then
            echo "TEST WARNING!"
            NUM_WARN=$(($NUM_WARN+1))
	    TEST_REPORT=( "${TEST_REPORT[@]}" "${TEST}:warning: Command returned warning code")
        else
            echo "TEST FAILED!"
            NUM_FAILED=$(($NUM_FAILED+1))
	    TEST_REPORT=( "${TEST_REPORT[@]}" "${TEST}:failure: Command returned fail code")
        fi
    fi
    popd > /dev/null
done


echo
echo "Test Report:"
cnt=${#TEST_REPORT[@]}
for (( i = 0 ; i < cnt ; i++ ))
do
    echo "${TEST_REPORT[$i]}"
done


rate=`expr \( $NUM_PASSED \* 100 \) /  $NUM_TOTAL`

echo
echo "passed: $NUM_PASSED"
echo "failed: $NUM_FAILED"
echo "warnings: $NUM_WARN"
echo "skipped: $NUM_SKIPPED"
echo "$rate%: Tests: $NUM_TOTAL, Failures: $NUM_FAILED, Warnings: $NUM_WARN"

if [ "$NUM_FAILED" -gt 0 ]; then
    exit 1
elif [ "$NUM_WARN" -gt 0 ]; then
    #Buildbot should parse out warnings
    exit 0
else
    exit 0
fi

