#!/bin/bash
#
# Copyright (c) 2008-2010, Regents of the University of Colorado.
# This work was supported by NASA contracts NNJ05HE10G, NNC06CB40C, and
# NNC07CB47C.
#


if [ -z "$ROOT" ]; then
    echo "ROOT environment variable is undefined"
    exit 1
fi

if [ -z "$TEST_DURATION" ]; then
    TEST_DURATION=30
fi


UNIQUE=$$
SYNCUNIQUE=${HOSTNAME//\./-}
RETVAL=0


YEAR=`date +%Y`
PREV_YEAR=$(($YEAR-1))
NEXT_YEAR=$(($YEAR+1))

#Generate core files on error
ulimit -Sc unlimited

echo "making DB file"
rm -f orig-bdm.db sync-bd,.db
sqlite3 orig-bdm.db < $ROOT/data-manager/server/schema
cp orig-bdm.db sync-bdm.db

echo starting TCP sync receiver BDM
$ROOT/data-manager/server/bionet-data-manager -x bdm.ini.test --file sync-bdm.db --id sync-recv-$SYNCUNIQUE --resources "a.a.a:a" --tcp-sync-receiver &
RECVPID=$!
echo " -> $ROOT/data-manager/server/bionet-data-manager $RECVPID"

echo starting TCP sync sender BDM
$ROOT/data-manager/server/bionet-data-manager -x bdm.ini.test --file orig-bdm.db --id sync-send-$SYNCUNIQUE --habs "random-hab.$UNIQUE" --nodes "random-hab.$UNIQUE.*" --resources "random-hab.$UNIQUE.*:*" --sync-sender-config $ROOT/test/tests/110.bdmsync-over-tcp-random-to-bdm-to-bdm/test.cfg --port 11111 &
SENDPID=$!
echo " ->  $ROOT/data-manager/server/bionet-data-manager $SENDPID"
sleep 6 # let the bdm come up before starting the HAB


WATCHCMD="$ROOT/data-manager/client/bdm-watcher/bdm-watcher --output-mode 'bdm-client' -T '$PREV_YEAR-01-01 00:00:00' -t '$NEXT_YEAR-12-31 12:59:59' -r 'sync-recv-$SYNCUNIQUE,sync-send-$SYNCUNIQUE/random-hab.$UNIQUE.*:*'"

echo "bdm-watcher args: $WATCHCMD"


echo "no datapoints generated, starting bdm-watcher.0"
eval "$WATCHCMD >| out.bdm-watcher.0 &"
WPID0=$!

echo starting random-hab
$ROOT/hab/random/random-hab --id $UNIQUE --output-mode bdm-client --max-delay 1 >| out.random-hab &
HABPID=$!

sleep `expr $TEST_DURATION / 2`

echo "some datapoints generated, starting bdm-watcher.1"
eval "$WATCHCMD >| out.bdm-watcher.1 &"
WPID1=$!

sleep `expr $TEST_DURATION / 2`

echo "all datapoints generated. Killing random-hab"
kill $HABPID
wait $HABPID

# Let the BDM commit the last info to disk
sleep 30

#Use BDM-Client to get the datapoints specifically from the sync-sender
$ROOT/data-manager/scripts/bdm-client.py -o chrono -s localhost -p 11111 -T "$PREV_YEAR-01-01 00:00:00" -t "$NEXT_YEAR-12-31 12:59:59" -r "random-hab.$UNIQUE.*:*" >| out.bdm-orig
echo "test run complete. killing the TCP sync sender BDM"
kill $SENDPID
wait $SENDPID

echo "all datapoints generated. Killing  bdm-watcher.0 and bdm-watcher.1"
kill $WPID0
kill $WPID1
wait $WPID0
wait $WPID1

echo "all datapoints generated. Sync-sender stopped. Starting bdm-watcher.2"
eval "$WATCHCMD >| out.bdm-watcher.2 & "
WPID2=$!

sleep 30
kill $WPID2
wait $WPID2

echo "Killing  bdm-watcher.2"

echo "killing BDM"
kill $RECVPID
wait

for i in out.bdm-watcher.0 out.bdm-watcher.1 out.bdm-watcher.2 out.bdm-orig; do
    sort $i > $i.sorted
    if ! diff -q out.random-hab $i.sorted; then
	echo "ERROR: $i output differs from random-hab output:"
	diff -u out.random-hab $i.sorted
	RETVAL=1
    fi
done

if [ $RETVAL -eq 0 ] ; then
    echo "All outputs checkout. Yeah!"
fi

exit $RETVAL

