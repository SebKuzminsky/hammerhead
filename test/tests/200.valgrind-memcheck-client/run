#!/bin/bash
#
# Copyright (c) 2008-2009, Regents of the University of Colorado.
# This work was supported by NASA contracts NNJ05HE10G, NNC06CB40C, and
# NNC07CB47C.
#


if [ -z "$ROOT" ]; then
    echo "ROOT environment variable is undefined"
    exit 1
fi

if [ -z "$TEST_DURATION" ]; then
    TEST_DURATION=30
fi

. $ROOT/test/config.sh

UNIQUE=$$
RETVAL=0

VGLEAK=
if [ -z "$ENABLE_DARWIN" ]; then
    VGLEAK=--leak-check=full
fi

# uncomment this to enable printing of suppressions:
#GEN_SUPPRESSIONS="--gen-suppressions=all"


echo starting bionet-watcher under valgrind memcheck
G_SLICE=always-malloc G_DEBUG=gc-friendly,resident-modules $LIBTOOL --mode=execute valgrind --suppressions=valgrind.suppressions$VGSUPPRESSIONS_SUFFIX --quiet --log-file=out.valgrind.watcher $GEN_SUPPRESSIONS --num-callers=25 --tool=memcheck --trace-children=yes $VGLEAK  $ROOT/client/watcher/bionet-watcher --habs "random-hab.$UNIQUE" --nodes "random-hab.$UNIQUE.*" --resources "random-hab.$UNIQUE.*:*" >| out.watcher &

sleep 4  # let the client come up before starting the hab (valgrind makes it slow)


echo starting random-hab
$ROOT/hab/random/random-hab --id $UNIQUE --output-mode bionet-watcher --max-delay 1 >| out.random-hab &


sleep $TEST_DURATION


echo "killing the HAB"
kill %2
wait %2

sleep 6  # to let the clients notice


echo "killing the bionet-watcher (under valgrind)"
kill %1
wait %1


if ! diff -q out.watcher out.random-hab; then
    echo "ERROR: watcher output differs from random-hab output:"
    diff -u out.random-hab out.watcher
    RETVAL=1
else
    echo "watcher output is identical to random-hab output, yay"
fi

if grep -q '^==' out.valgrind.watcher; then
    echo "valgrind memcheck output:"
    cat out.valgrind.watcher
    if [ $RETVAL -eq 0 ]; then RETVAL=$TEST_WARNING_CODE; fi
else
    echo "valgrind memcheck finds no errors :-)"
fi

exit $RETVAL

