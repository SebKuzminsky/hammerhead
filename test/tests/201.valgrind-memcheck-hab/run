#!/bin/bash

UNIQUE=$$

if [ -z "$ROOT" ]; then
    echo "ROOT environment variable is undefined"
    exit 1
fi

if [ -z "$TEST_DURATION" ]; then
    TEST_DURATION=30
fi

RETVAL=0

echo starting random-hab under valgrind memcheck
libtool --mode=execute valgrind --suppressions=valgrind.suppressions --quiet --log-file=out.valgrind.random-hab --num-callers=25 --tool=memcheck --trace-children=yes --leak-check=full $ROOT/hab/random/random-hab --id $UNIQUE --output-mode bionet-watcher --max-delay 1 >| out.random-hab &

echo starting bionet-watcher
$ROOT/client/watcher/bionet-watcher --habs "random-hab.$UNIQUE" --nodes "random-hab.$UNIQUE.*" --resources "random-hab.$UNIQUE.*:*" >| out.watcher &

sleep $TEST_DURATION

# kill the hab
kill %1
sleep 4  # to let the clients notice

kill %2
sleep 1


if ! diff -q out.watcher out.random-hab; then
    echo "ERROR: watcher output differs from random-hab output:"
    diff -u out.random-hab out.watcher
    RETVAL=1
fi
echo "watcher output is identical to random-hab output, yay"


# let the valgrind output finish
sleep 1

if [ $(wc -l < out.valgrind.random-hab) -gt 0 ]; then
    echo "valgrind memcheck output:"
    cat out.valgrind.random-hab
    RETVAL=1
fi

if [ $RETVAL -eq 0 ]; then
    echo "valgrind memcheck finds no errors :-)"
fi

exit $RETVAL

