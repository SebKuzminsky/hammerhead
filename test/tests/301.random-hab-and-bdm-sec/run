#!/bin/bash -x
#
# Copyright (c) 2008-2010, Regents of the University of Colorado.
# This work was supported by NASA contracts NNJ05HE10G, NNC06CB40C, and
# NNC07CB47C.
#

#
# This test is supposed to verify that bdm-watchers honor security
#
# Enable this test once bdm security is implemented
#

if [ -z "$ROOT" ]; then
    echo "ROOT environment variable is undefined"
    exit 1
fi

PYPATHADD=$ROOT/hab/py-libhab:$ROOT/client/py-libbionet:$ROOT/data-manager/client/py-libbdm:$ROOT/hab/py-libhab/.libs:$ROOT/client/py-libbionet/.libs:$ROOT/data-manager/client/py-libbdm/.libs
if [ -z "$PYTHONPATH" ]; then
    export PYTHONPATH=$PYPATHADD
else
    export PYTHONPATH=$PYPATHADD:$PYTHONPATH
fi

UNIQUE=$$

ORIG_DIR=$PWD

#make the new database and start the BDM, but only listen to RANDOM HABs.
echo "Killing any running BDM servers..."
killall bionet-data-manager lt-bionet-data-manager > /dev/null 2> /dev/null
sleep 1

#Let bionet-data-manager generate a clean database
rm -f $ORIG_DIR/bdm.db

echo "Starting BDM server..."
rm -f bdm.log
$ROOT/data-manager/server/bionet-data-manager -x bdm.ini.test --filter "random-hab.$UNIQUE.*:*" -f $ORIG_DIR/bdm.db --debug --log-file=bdm.log &

echo "Starting Bionet Watcher..."
$ROOT/client/watcher/bionet-watcher --hab "random-hab.$UNIQUE" --node "random-hab.$UNIQUE.*" --resource "random-hab.$UNIQUE.*:*" > watcher.out &
sleep 1

#run a Random HAB and output the test data here
cd $ROOT/hab/random
echo "Running Random HAB..."
./random-hab -i $UNIQUE --output-mode bdm-client > $ORIG_DIR/random.out &
sleep 35
echo "Killing Random HAB..."
kill %3
wait %3
cd $ORIG_DIR

#grab data from the BDM
YEAR=`date +%Y`
cd $ROOT/data-manager/scripts
echo "Running BDM-Client..."
./bdm-client.py -o chrono -s localhost -T "$YEAR-01-01 00:00:00" -t "$YEAR-12-31 12:59:59" -r "random-hab.$UNIQUE.*:*" > $ORIG_DIR/bdm.out

#stop the BDM
echo "Killing BDM server..."
kill %1
wait %1
echo "Killing Bionet Watcher..."
kill %2
wait %2

cd $ORIG_DIR

echo `diff random.out bdm.out | wc -l` "differences."
