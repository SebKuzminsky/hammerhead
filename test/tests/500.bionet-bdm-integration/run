#!/bin/bash
#
# Copyright (c) 2008-2010, Regents of the University of Colorado.
# This work was supported by NASA contracts NNJ05HE10G, NNC06CB40C, and
# NNC07CB47C.
#


UNIQUE=$$

RETVAL=0

YEAR=`date +%Y`
PREV_YEAR=$(($YEAR-1))
NEXT_YEAR=$(($YEAR+1))


if [ -z "$ROOT" ]; then
    echo "ROOT environment variable is undefined"
    exit 1
fi

if [ -z "$TEST_DURATION" ]; then
    TEST_DURATION=15
fi

. $ROOT/test/config.sh
. $ROOT/test/testlib.sh

echo "making DB file"
rm -f bdm.db

export G_SLICE=always-malloc 
export G_DEBUG=gc-friendly,resident-modules 

echo starting BDM
rm -f bdm.log
$ROOT/data-manager/server/bionet-data-manager -x bdm.ini.test --filter "random-hab.$UNIQUE.*:*" --id "bdm-$UNIQUE" --debug --log-file=bdm.log &
BDMPID=$!

echo starting bionet-watcher
$ROOT/client/watcher/bionet-watcher --output-mode=csv -T "$PREV_YEAR-01-01 00:00:00" -t "$NEXT_YEAR-12-31 12:59:59" -r "random-hab.$UNIQUE.*:*" -h "random-hab.$UNIQUE" -n "random-hab.$UNIQUE.*" >| out.watcher &
WATCHPID=$!

sleep 3 # let the bdm come up before starting the HAB

echo starting random-hab
$ROOT/hab/random/random-hab --id $UNIQUE --output-mode bdm-client --max-delay 1 >| out.random-hab &
HABPID=$!

sleep $TEST_DURATION


echo "test run complete, killing random-hab"
kill $HABPID
wait $HABPID
sleep 20 # let the BDM get any last things sent by the random-hab


echo "killing BDM"
kill $BDMPID
wait $BDMPID

echo "killing bionet-watcher"
kill $WATCHPID
wait $WATCHPID
sleep 1

normalize_bdm_client out.random-hab > out.random-hab.norm

grep "LIVE" out.watcher | sed -r 's/,+LIVE$//' > out.watcher.live
grep "bdm-$UNIQUE" out.watcher | sed -r "s/,+bdm-$UNIQUE\$//" > out.watcher.bdm

for log in out.watcher.live out.watcher.bdm; do
    normalize_bdm_client $log > $log.norm
    if ! diff -q out.random-hab.norm $log.norm; then
	echo "ERROR: bionet output differs from random-hab output:"
	diff -u out.random-hab.norm $log.norm
	RETVAL=1
    fi
done

exit $RETVAL
