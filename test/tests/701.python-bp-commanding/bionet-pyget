#!/usr/bin/python

# Copyright (c) 2008-2010, Regents of the University of Colorado.
# This work was supported by NASA contracts NNJ05HE10G, NNC06CB40C, and
# NNC07CB47C.

# This library is free software. You can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as 
# published by the Free Software Foundation, version 2.1 of the License.
# This library is distributed in the hope that it will be useful, but 
# WITHOUT ANY WARRANTY; without even the implied warranty of 
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU 
# Lesser General Public License for more details. A copy of the GNU 
# Lesser General Public License v 2.1 can be found in the file named 
# "COPYING.LESSER".  You should have received a copy of the GNU Lesser 
# General Public License along with this library; if not, write to the 
# Free Software Foundation, Inc., 
# 51 Franklin Street, Fifth Floor, 
# Boston, MA 02110-1301 USA.
 
# You may contact the Automation Group at:
# bionet@bioserve.colorado.edu
 
# Dr. Kevin Gifford
# University of Colorado
# Engineering Center, ECAE 1B08
# Boulder, CO 80309
 
# Because BioNet was developed at a university, we ask that you provide
# attribution to the BioNet authors in any redistribution, modification, 
# work, or article based on this library.
 
# You may contribute modifications or suggestions to the University of
# Colorado for the purpose of discussing and improving this software.
# Before your modifications are incorporated into the master version 
# distributed by the University of Colorado, we must have a contributor
# license agreement on file from each contributor. If you wish to supply
# the University with your modifications, please join our mailing list.
# Instructions can be found on our website at 
# http://bioserve.colorado.edu/developers-corner.


import optparse
import logging
import time
import sys
from select import select
from bionet import *

# initialize the Python logger
logger = logging.getLogger("Bionet PyGet")
logger.setLevel(logging.INFO)
ch = logging.StreamHandler()
ch.setLevel(logging.INFO)
formatter = logging.Formatter("%(asctime)s - %(name)s - %(levelname)s - %(message)s")
ch.setFormatter(formatter)
logger.addHandler(ch)

# parse options 
parser = optparse.OptionParser()
parser.add_option("-r", "--resource", dest="resource",default=None,
                  help="Resource name patter to command.")
parser.add_option("-s", "--seconds", dest="seconds", default="5.0",
                  help="Seconds to wait around for resources to show up. 0 is infinite.")
parser.add_option("-t", "--timestamp", dest="timestamp", default=False, action="store_true",
                  help="Seconds to wait around for resources to show up. 0 is infinite.")

(options, args) = parser.parse_args()

if None == options.resource:
    logger.error("Resource name must be specified.")
    sys.exit(1)

def cb_datapoint(datapoint):
    global options
    if (options.timestamp):
        print str(datapoint)
    else:
        print str(datapoint.value())
    sys.exit(0)


# set the default Bionet log handler
bionet_log_use_default_handler(None)

bn = Bionet()
bn.datapointCallback = cb_datapoint
bn.subscribe(options.resource)

end = time.time() + float(options.seconds)
if (float(options.seconds) == 0.0):
    wait = 5.0
else:
    wait = float(options.seconds)

while(0 < wait):
    bn.read(int(wait))
    wait = end - time.time()
    if (float(options.seconds) == 0.0):
        wait = 5.0
